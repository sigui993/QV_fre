<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACyBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAER0lEQVRYR+1WS28b
        VRTO70DUdv2MnTSBSIHy2CHYsIAFK0QrWECFukRCYhuplVggwR9AYlsVCdElUliAKpC6oIBUhbQ2OONH
        HDdx7NgZz+vjO2cemThmmpfYwGddzficc+/95tzvnntnkATHAcweLBdw4WHo8YWwPH2cCxIJcHo0L86h
        wVYr5vHz4vPAeBfOUDzng2QCnkMClSOtnp/D6tJLcG0TJmwSPX1KEgnI0LX8JbQzB5O32IxcWbPSyhbx
        1+wS18cOepwciQQ8z4PLj5PhPbOPB6WXUS9V0MjGMzKHbqqC1YXLsMyx3/EESCRgspEDuBIRhBR6Bv7M
        LujkjWw5ItNNzQKDnpJ27ePpJDkDjot7FQrPiafYhcuUy6o71j71MB8RaGeE0Cz++HiFMX70k3AsEbbT
        ZRjZOWx9+ZWfDRIL4ZHbwxufopGbjYh0mIm1jz7BcZKQSIAfqyk2csVo8Ca/cO3mDZIjj1D98uiPsEkS
        nfS8ClViH6ys0Gf5Mf+ARAKyjrXMEupUfUhgg+9b6RK/uALXGWpcQIOFysLDNHdHGHshT/EOAu90JGeA
        sF0qm2ocfP0NGplFZoBbj3VAJmhkCrj75lskID8fDvVhZEsk7cc8frro7yJJ5xQkZ4CjmlS9CF+gj9EA
        27kFrQ3VwiWd5H5lWSdxpXYyyDGHaF4Ilow7xf7xh2iMSSSLUEibe0cUbXsmnF9+gnGxpJN0mPbvSsuq
        C4FLZf5Wfi4gwOKVLsCSc2UKkglQ8vKlDe6AavkFbrsBDyI5lnxhWfxfo/A26JeJ8OiR2iVCkvE4VVB7
        N1WGN55epI5FQAbZ5LOem6f4ylT8tqZa08o1F79Ux+1Mye+odg/N9JL6pLVvfu77JvBEAuEA0UAkImRW
        X3ldPhUjxpm/3+fukCLEdN++TYu/FuM732qfLneNFCntMIETE4i3+mdf+IFc82omq7aN7LxvI0T58XhV
        9QTORMDIV/yzgQPfffG1yB7CHh/uHy/oIc5EoMkS7fKU1Mx2d9RmJGXgvJdgMzOLsdfDmOM67r7apFJG
        oPDF1qJmpDpOmf9sBFoUlmvLnYEjrxtqMyjEECPLimI3WLr9M/QwziZCLoEPD+vFy2qTPR/Ca9fUJgfa
        98/wWD86/+kIyFd2niph39nXQaUEyz1Ayu69Z18NejMphWWNl62LDmvHFJyKgOx3b6cnxQ56U99p8YTk
        sZ3mjcg60Ho35ZdqIebG7hBxzODWHaxfvYbqlWuoTbS1q9exRaHFm5FexK/viv99jWm+cQWbPBPE1yjw
        +q5939Pl2coU1S5FqPb29cAX9v0A1Xc+xMyIV2tb9rKsz2D3cNvlFhvsHW598cl7ENPjnaAf+CRe/H0+
        98Tm9/ekdO8G8Tpuj+l19Fw5WALm03FGsbbHNgya/I+/h35p4f/pMeNxP2b3fRgN4QYXpUQN/Bv4n8B/
        nQDwN+nhD8cXNs/UAAAAAElFTkSuQmCC
</value>
  </data>
</root>